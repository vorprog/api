on: { push: , workflow_dispatch: }
defaults: { run: { shell: 'bash -ex {0}' } }
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{ github.event.repository.name }}
      BINARY_PATH: ./dist/${{ github.event.repository.name }}
      APP_VERSION: 0.1.${{ github.run_number }}
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
      - uses: actions/cache@main
        with:
          path: node_modules
          key: node_modules_${{ hashFiles('package-lock.json') }}
          restore-keys: |
            node_modules_
      - name: build
        run: npm ci && npm run build && npm run test
      - name: release
        if: github.ref == 'refs/heads/${{ github.event.repository.default_branch }}'
        env:
          GH_TOKEN: ${{ github.token }}
          BINARY_HASH: ${{ hashFiles(env.BINARY_PATH) }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-west-2
        run: |
          git tag $APP_VERSION
          git push origin $APP_VERSION
          tar -czvf ./dist/$APP_NAME.tar.gz ./dist/$APP_NAME
          gh release create $APP_VERSION --generate-notes --notes "Binary hash: $BINARY_HASH"
          gh release upload $APP_VERSION ./dist/$APP_NAME.tar.gz
          aws s3 cp ./dist/$APP_NAME.tar.gz s3://${{ github.repository_owner }}-$APP_NAME/$APP_VERSION.tar.gz
